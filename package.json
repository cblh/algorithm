{
  "name": "algorithm",
  "displayName": "algorithm",
  "description": "solve, test, debug question for leetcode",
  "version": "0.0.9",
  "engines": {
    "vscode": "^1.46.0"
  },
  "publisher": "supperchong",
  "categories": [
    "Other"
  ],
  "icon": "images/algorithm.png",
  "activationEvents": [
    "onCommand:workbench.action.tasks.runTask",
    "onView:questions",
    "onLanguage:typescript",
    "onLanguage:javascript",
    "onCommand:algorithm.testCode",
    "onCommand:algorithm.debugCode",
    "onCommand:algorithm.buildCode",
    "onCommand:algorithm.submit",
    "onCommand:algorithm.getDescription",
    "onCommand:algorithm.refreshQuestions",
    "onWebviewPanel:algorithm.copyCode",
    "onWebviewPanel:algorithm.questionPreview"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/supperchong/algorithm.git"
  },
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "algorithm",
      "properties": {
        "algorithm.nodePath": {
          "type": "string",
          "default": "node",
          "description": "The absolute pathname of the executable that started the Node.js process. eg: /usr/local/bin/node",
          "scope": "window"
        },
        "algorithm.javacPath": {
          "type": "string",
          "default": "javac",
          "description": "The absolute pathname of the executable that started the javac process.",
          "scope": "window"
        },
        "algorithm.javaPath": {
          "type": "string",
          "default": "java",
          "description": "The absolute pathname of the executable that started the java process.",
          "scope": "window"
        },
        "algorithm.lang": {
          "type": "string",
          "default": "en",
          "enum": [
            "en",
            "cn"
          ],
          "enumDescriptions": [
            "US",
            "中国版"
          ],
          "scope": "window"
        },
        "algorithm.codeLang": {
          "type": "string",
          "default": "JavaScript",
          "enum": [
            "JavaScript",
            "TypeScript",
            "Python3",
            "Go",
            "Java",
            "C++"
          ],
          "scope": "window"
        },
        "algorithm.database": {
          "type": "string",
          "default": "MySQL",
          "enum": [
            "MySQL",
            "MS SQL Server",
            "Oracle"
          ],
          "scope": "window"
        },
        "algorithm.autoImportStr": {
          "type": "string",
          "default": "",
          "description": "The string will be inserted at the beginning of the coding file",
          "scope": "window"
        },
        "algorithm.baseDir": {
          "type": "string",
          "default": "",
          "description": "The path of the folder to save the problem files.",
          "scope": "window"
        },
        "algorithm.autoImportAlgm": {
          "type": "boolean",
          "description": "if true, will auto import algm at the beginning of the coding file."
        },
        "algorithm.displayLock": {
          "type": "boolean",
          "description": "if true, will display the locked questions."
        }
      }
    },
    "menus": {
      "editor/title": [
        {
          "command": "algorithm.copyCode",
          "when": "buildCodeFocus",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "command": "algorithm.newAnswer",
          "when": "resourceDirname =~ /(cn|en)(\\/|\\\\)(JavaScript|Java|TypeScript|Go|Python3|Java|C\\+\\+)/",
          "group": "algorithm"
        }
      ],
      "view/title": [
        {
          "command": "algorithm.refreshQuestions",
          "when": "view == questions",
          "group": "navigation"
        },
        {
          "command": "algorithm.switchEndpoint",
          "when": "view == questions",
          "group": "navigation"
        },
        {
          "command": "algorithm.signIn",
          "when": "view == questions",
          "group": "navigation"
        },
        {
          "command": "algorithm.search",
          "when": "view == questions",
          "group": "navigation"
        },
        {
          "command": "algorithm.addFolder",
          "when": "view == memo",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "algorithm.buildCode",
          "when": "never"
        },
        {
          "command": "algorithm.copyCode",
          "when": "never"
        },
        {
          "command": "algorithm.questionPreview",
          "when": "never"
        },
        {
          "command": "algorithm.addFolder",
          "when": "never"
        },
        {
          "command": "algorithm.addMemoFile",
          "when": "never"
        },
        {
          "command": "algorithm.memoFilePreview",
          "when": "never"
        },
        {
          "command": "algorithm.removeMemoFile",
          "when": "never"
        }
      ],
      "view/item/context": [
        {
          "command": "algorithm.addMemoFile",
          "when": "view == questions && viewItem == memo"
        },
        {
          "command": "algorithm.removeMemoFile",
          "when": "view == memo && viewItem == memoFile"
        }
      ]
    },
    "commands": [
      {
        "command": "algorithm.refreshQuestions",
        "title": "Refresh",
        "icon": "$(refresh)",
        "category": "algorithm"
      },
      {
        "command": "algorithm.switchEndpoint",
        "title": "Switch Endpoint",
        "icon": "$(globe)",
        "category": "algorithm"
      },
      {
        "command": "algorithm.signIn",
        "title": "sign in",
        "icon": "$(sign-in)",
        "category": "algorithm"
      },
      {
        "command": "algorithm.search",
        "title": "search question",
        "icon": "$(search)",
        "category": "algorithm"
      },
      {
        "command": "algorithm.buildCode",
        "title": "build code",
        "category": "algorithm"
      },
      {
        "command": "algorithm.copyCode",
        "title": "copy code",
        "icon": {
          "light": "./media/light/copy.svg",
          "dark": "./media/dark/copy.svg"
        },
        "category": "algorithm",
        "when": "buildCodeFocus"
      },
      {
        "command": "algorithm.questionPreview",
        "title": "preview question",
        "category": "algorithm"
      },
      {
        "command": "algorithm.switchCodeLang",
        "title": "switch default language",
        "category": "algorithm"
      },
      {
        "command": "algorithm.switchDataBase",
        "title": "switch default database",
        "category": "algorithm"
      },
      {
        "command": "algorithm.addFolder",
        "title": "new folder",
        "icon": "$(new-folder)",
        "category": "algorithm"
      },
      {
        "command": "algorithm.addMemoFile",
        "title": "add question in memo",
        "icon": "$(add)",
        "category": "algorithm"
      },
      {
        "command": "algorithm.memoFilePreview",
        "title": "preview file",
        "category": "algorithm"
      },
      {
        "command": "algorithm.removeMemoFile",
        "title": "remove question in memo",
        "icon": "$(discard)",
        "category": "algorithm"
      },
      {
        "command": "algorithm.viewSubmitHistory",
        "title": "view leetcode submit history",
        "category": "algorithm"
      },
      {
        "command": "algorithm.newAnswer",
        "title": "new leetcode answer",
        "category": "algorithm"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "package-algorithm",
          "title": "algorithm",
          "icon": "media/algorithm.svg"
        }
      ]
    },
    "views": {
      "package-algorithm": [
        {
          "id": "questions",
          "name": "questions",
          "contextualTitle": "Package Explorer"
        },
        {
          "id": "memo",
          "name": "memo",
          "contextualTitle": "memo"
        }
      ]
    },
    "taskDefinitions": [
      {
        "type": "algorithm",
        "required": [],
        "properties": {}
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./ --skipLibCheck --noEmitOnError",
    "lint": "eslint src --fix --ext ts",
    "prettier-format": "prettier --config .prettierrc.json src/**/*.ts --write",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "test": "node ./out/test/runTest.js",
    "unitTest": "node node_modules/mocha/bin/mocha  ./src/test/unit"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run prettier-format && npm run lint"
    }
  },
  "devDependencies": {
    "@types/babel__core": "^7.1.9",
    "@types/esprima": "^4.0.2",
    "@types/glob": "^7.1.1",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.11.0",
    "@types/request": "^2.48.5",
    "@types/vscode": "^1.46.0",
    "@typescript-eslint/eslint-plugin": "^4.26.0",
    "@typescript-eslint/parser": "^4.26.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.12.0",
    "eslint-plugin-prettier": "^3.4.0",
    "glob": "^7.1.6",
    "husky": "^6.0.0",
    "mocha": "^7.1.2",
    "prettier": "^2.3.0",
    "typescript": "^4.3.2",
    "vscode-test": "^1.3.0"
  },
  "dependencies": {
    "@babel/core": "^7.13.10",
    "@babel/preset-typescript": "^7.13.0",
    "@rollup/plugin-babel": "^5.0.4",
    "@rollup/plugin-node-resolve": "^11.2.1",
    "@rollup/plugin-typescript": "^8.2.0",
    "@rollup/plugin-virtual": "^2.1.0",
    "acorn": "^8.0.4",
    "algm": "^0.1.6",
    "ast-types": "^0.14.2",
    "axios": "^0.21.1",
    "cheerio": "1.0.0-rc.3",
    "compressing": "^1.5.1",
    "es-set-tostringtag": "^2.1.0",
    "fs-extra": "^9.1.0",
    "highlight.js": "^11.0.0",
    "markdown-it": "^10.0.0",
    "pretty-object-string": "2.0.0-beta.3",
    "pretty-tag": "^0.1.1",
    "recast": "^0.20.4",
    "request": "^2.88.2",
    "rimraf": "^3.0.2",
    "rollup": "^2.40.0",
    "source-map": "^0.7.3"
  }
}
